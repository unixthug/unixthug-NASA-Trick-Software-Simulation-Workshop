TRICK_SYSTEM_SWIG_CFLAGS := -I../include ${PYTHON_INCLUDES} -Wno-shadow -Wno-missing-field-initializers

ifeq ($(IS_CC_CLANG), 1)
    TRICK_SYSTEM_SWIG_CFLAGS += -Wno-self-assign -Wno-sometimes-uninitialized -Wno-deprecated-register
else
    TRICK_SYSTEM_SWIG_CFLAGS += -Wno-unused-but-set-variable -Wno-maybe-uninitialized
    ifeq ($(shell test $(GCC_MAJOR) -ge 8; echo $$?), 0)
        TRICK_SYSTEM_SWIG_CFLAGS += -Wno-cast-function-type
    endif
endif

ifndef TRICK_VERBOSE_BUILD
    PRINT_SWIG         = $(info $(call COLOR,SWIGing)    $<)
    PRINT_COMPILE_SWIG = $(info $(call COLOR,Compiling)  $<)
endif

# TRICK_FIXED_PYTHON ===========================================================

TRICK_FIXED_PYTHON = \
    .trick/swig_double.py \
    .trick/swig_int.py \
    .trick/swig_ref.py \
    .trick/shortcuts.py \
    .trick/unit_test.py \
    .trick/sim_services.py \
    .trick/exception.py

$(TRICK_FIXED_PYTHON): .trick/% : ${TRICK_HOME}/share/trick/swig/%
	$(call ECHO_AND_LOG,/bin/cp -f $< $@)

# SWIG_I =======================================================================

SWIG_I = \
    build/home/caci114/trick_sims/SIM_submarine/S_source_py.i \
    build/home/caci114/trick_sims/SIM_submarine/models/submarine/include/Submarine_py.i

define create_convert_swig_rule
build/%_py.i: /%.$1
	$$(call ECHO_AND_LOG,${TRICK_HOME}/$(LIBEXEC)/trick/convert_swig $${TRICK_CONVERT_SWIG_FLAGS} $$<)
endef

$(foreach EXTENSION,H h hh hxx h++ hpp,$(eval $(call create_convert_swig_rule,$(EXTENSION))))

build/top.i: build/CP_instances
	$(call ECHO_AND_LOG,${PYTHON} ${TRICK_HOME}/${LIBEXEC}/trick/create_top_dot_i)

# SWIG_SRC =====================================================================

SWIG_SRC = $(subst .i,.cpp,$(SWIG_I)) build/top.cpp

$(SWIG_SRC) : %.cpp: %.i | %.d $(SWIG_I)
	$(PRINT_SWIG)
	$(call ECHO_AND_LOG,$(SWIG) $(TRICK_INCLUDE) $(TRICK_DEFINES) $(TRICK_VERSIONS) $(TRICK_SWIG_FLAGS) -c++ -python -includeall -ignoremissing -w201 -w303 -w315 -w325 -w362 -w389 -w401 -w451 -MMD -MP -outdir .trick -o $@ $<)

$(SWIG_SRC:.cpp=.d): ;

-include $(SWIG_SRC:.cpp=.d)

# SWIG_OBJECTS =================================================================

SWIG_OBJECTS = $(subst .cpp,.o,$(SWIG_SRC)) build/init_swig_modules.o

$(SWIG_OBJECTS): %.o: %.cpp
	$(PRINT_COMPILE_SWIG)
	$(call ECHO_AND_LOG,$(TRICK_CXX) $(TRICK_CXXFLAGS) $(TRICK_SYSTEM_CXXFLAGS) $(TRICK_SWIG_CFLAGS) $(TRICK_SYSTEM_SWIG_CFLAGS) -Wno-unused-parameter -c -o $@ $<)

$(S_MAIN): $(SWIG_OBJECTS)

LINK_LISTS += $(LD_FILELIST)build/py_link_list

# trick.zip ===================================================================

trick.zip: $(SWIG_SRC) $(TRICK_FIXED_PYTHON) .trick/__init__.py
	$(info $(call COLOR,Compiling)  Python modules)
	$(call ECHO_AND_LOG,$(PYTHON) -m compileall -q .trick)
	$(info $(call COLOR,Zipping)    Python modules into $@)
	$(call ECHO_AND_LOG,ln -sf .trick trick)
	$(call ECHO_AND_LOG,zip -rq trick.zip trick)
	$(call ECHO_AND_LOG,rm -f trick)


all: trick.zip
